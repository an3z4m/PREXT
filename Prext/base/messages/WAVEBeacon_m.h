//
// Generated file, do not edit! Created by nedtool 5.6 from veins/modules/Prext/base/messages/WAVEBeacon.msg.
//

#ifndef __WAVEBEACON_M_H
#define __WAVEBEACON_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// dll export symbol
#ifndef VEINS_API
#  if defined(VEINS_EXPORT)
#    define VEINS_API  OPP_DLLEXPORT
#  elif defined(VEINS_IMPORT)
#    define VEINS_API  OPP_DLLIMPORT
#  else
#    define VEINS_API
#  endif
#endif



// cplusplus {{
#include <veins/base/utils/Coord.h>
#include <veins/modules/messages/BasicSafetyMessage_m.h>
// }}

/**
 * Class generated from <tt>veins/modules/Prext/base/messages/WAVEBeacon.msg:29</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * message WAVEBeacon extends BasicSafetyMessage
 * {
 *     uint64_t senderPsynm;
 *     Coord senderVel;
 *     double senderAngle;
 *     bool CPN_readyFlag;
 *     bool isEncrypted;	//message should be encrypted in mix-zone, thus eavesdropper cannot read it
 * }
 * </pre>
 */
class VEINS_API WAVEBeacon : public ::BasicSafetyMessage
{
  protected:
    uint64_t senderPsynm;
    Coord senderVel;
    double senderAngle;
    bool CPN_readyFlag;
    bool isEncrypted;

  private:
    void copy(const WAVEBeacon& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WAVEBeacon&);

  public:
    WAVEBeacon(const char *name=nullptr, short kind=0);
    WAVEBeacon(const WAVEBeacon& other);
    virtual ~WAVEBeacon();
    WAVEBeacon& operator=(const WAVEBeacon& other);
    virtual WAVEBeacon *dup() const override {return new WAVEBeacon(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint64_t getSenderPsynm() const;
    virtual void setSenderPsynm(uint64_t senderPsynm);
    virtual Coord& getSenderVel();
    virtual const Coord& getSenderVel() const {return const_cast<WAVEBeacon*>(this)->getSenderVel();}
    virtual void setSenderVel(const Coord& senderVel);
    virtual double getSenderAngle() const;
    virtual void setSenderAngle(double senderAngle);
    virtual bool getCPN_readyFlag() const;
    virtual void setCPN_readyFlag(bool CPN_readyFlag);
    virtual bool getIsEncrypted() const;
    virtual void setIsEncrypted(bool isEncrypted);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WAVEBeacon& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WAVEBeacon& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WAVEBEACON_M_H

